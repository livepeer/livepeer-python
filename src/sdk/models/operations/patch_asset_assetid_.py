"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import asset as components_asset
from ...models.components import asset_patch_payload as components_asset_patch_payload
from typing import Optional


@dataclasses.dataclass
class PatchAssetAssetIDRequest:
    asset_patch_payload: components_asset_patch_payload.AssetPatchPayload = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    asset_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'assetId', 'style': 'simple', 'explode': False }})
    r"""ID of the asset"""
    



@dataclasses.dataclass
class PatchAssetAssetIDResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    asset: Optional[components_asset.Asset] = dataclasses.field(default=None)
    r"""Success"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

