"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import session as components_session
from typing import List, Optional


@dataclasses.dataclass
class GetRecordedSessionsRequest:
    parent_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'parentId', 'style': 'simple', 'explode': False }})
    r"""ID of the parent stream"""
    record: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'record', 'style': 'form', 'explode': True }})
    r"""Flag indicating if the response should only include recorded
    sessions
    """
    



@dataclasses.dataclass
class GetRecordedSessionsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    data: Optional[List[components_session.Session]] = dataclasses.field(default=None)
    r"""Success"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

