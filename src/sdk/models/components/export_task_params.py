"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .ipfs_export_params import IpfsExportParams
from .ipfs_export_params1 import IpfsExportParams1
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportTaskParams2:
    r"""Parameters for the export task"""
    ipfs: IpfsExportParams = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipfs') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Custom:
    r"""custom URL parameters for the export task"""
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""URL where to export the asset"""
    headers: Optional[Dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers'), 'exclude': lambda f: f is None }})
    r"""Headers to add to the export request"""
    method: Optional[str] = dataclasses.field(default='PUT', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Method to use on the export request"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportTaskParamsSchemas1:
    r"""Parameters for the export task"""
    custom: Custom = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom') }})
    r"""custom URL parameters for the export task"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportTaskParamsSchemas2:
    r"""Parameters for the export task"""
    ipfs: IpfsExportParams1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipfs') }})
    

