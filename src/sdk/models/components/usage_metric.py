"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsageMetric:
    r"""An individual metric about usage of a user."""
    creator_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatorID') }})
    r"""The creator ID associated with the metric"""
    delivery_usage_mins: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryUsageMins') }})
    r"""The number of minutes of delivery usage"""
    storage_usage_mins: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageUsageMins') }})
    r"""The number of minutes of storage usage"""
    total_usage_mins: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalUsageMins') }})
    r"""The number of minutes of total usage"""
    user_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserID') }})
    r"""The user ID associated with the metric"""
    

