"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from livepeer.models.components import httpmetadata as components_httpmetadata
from livepeer.models.errors import error as errors_error
from livepeer.types import BaseModel
from livepeer.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class UpdateSigningKeyRequestBodyTypedDict(TypedDict):
    disabled: NotRequired[bool]
    name: NotRequired[str]


class UpdateSigningKeyRequestBody(BaseModel):
    disabled: Optional[bool] = None

    name: Optional[str] = None


class UpdateSigningKeyRequestTypedDict(TypedDict):
    key_id: str
    r"""ID of the signing key"""
    request_body: UpdateSigningKeyRequestBodyTypedDict


class UpdateSigningKeyRequest(BaseModel):
    key_id: Annotated[
        str,
        pydantic.Field(alias="keyId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""ID of the signing key"""

    request_body: Annotated[
        UpdateSigningKeyRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class UpdateSigningKeyResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    error: NotRequired[errors_error.Error]
    r"""Error"""


class UpdateSigningKeyResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    error: Optional[errors_error.Error] = None
    r"""Error"""
