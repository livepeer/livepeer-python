"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from livepeer.models.components import (
    httpmetadata as components_httpmetadata,
    playback_info as components_playback_info,
)
from livepeer.models.errors import error as errors_error
from livepeer.types import BaseModel
from livepeer.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetPlaybackInfoRequestTypedDict(TypedDict):
    id: str
    r"""The playback ID from the asset or livestream, e.g. `eaw4nk06ts2d0mzb`."""


class GetPlaybackInfoRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The playback ID from the asset or livestream, e.g. `eaw4nk06ts2d0mzb`."""


class GetPlaybackInfoResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    playback_info: NotRequired[components_playback_info.PlaybackInfoTypedDict]
    r"""Successful response"""
    error: NotRequired[errors_error.Error]
    r"""Playback not found"""


class GetPlaybackInfoResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    playback_info: Optional[components_playback_info.PlaybackInfo] = None
    r"""Successful response"""

    error: Optional[errors_error.Error] = None
    r"""Playback not found"""
