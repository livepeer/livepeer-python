"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from ...models.components import stream_patch_payload as components_stream_patch_payload
from ...models.errors import error as errors_error
from typing import Optional


@dataclasses.dataclass
class UpdateStreamRequest:
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of the stream"""
    stream_patch_payload: components_stream_patch_payload.StreamPatchPayload = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class UpdateStreamResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field()
    error: Optional[errors_error.Error] = dataclasses.field(default=None)
    r"""Error"""
    

