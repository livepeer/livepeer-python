"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .target import Target, TargetTypedDict
from livepeer.types import BaseModel
from typing import List, Optional, TypedDict
from typing_extensions import NotRequired


class MultistreamTypedDict(TypedDict):
    targets: NotRequired[List[TargetTypedDict]]
    r"""References to targets where this stream will be simultaneously
    streamed to

    """


class Multistream(BaseModel):
    targets: Optional[List[Target]] = None
    r"""References to targets where this stream will be simultaneously
    streamed to

    """
