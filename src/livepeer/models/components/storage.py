"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .spec import Spec, SpecTypedDict
from livepeer.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import TypedDict, Union
from typing_extensions import NotRequired


class Ipfs1TypedDict(TypedDict):
    spec: NotRequired[Nullable[SpecTypedDict]]


class Ipfs1(BaseModel):
    spec: OptionalNullable[Spec] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["spec"]
        nullable_fields = ["spec"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m


IpfsTypedDict = Union[Ipfs1TypedDict, bool]
r"""Set to true to make default export to IPFS. To customize the
pinned files, specify an object with a spec field. False or null
means to unpin from IPFS, but it's unsupported right now.

"""


Ipfs = Union[Ipfs1, bool]
r"""Set to true to make default export to IPFS. To customize the
pinned files, specify an object with a spec field. False or null
means to unpin from IPFS, but it's unsupported right now.

"""


class StorageTypedDict(TypedDict):
    ipfs: NotRequired[Nullable[IpfsTypedDict]]
    r"""Set to true to make default export to IPFS. To customize the
    pinned files, specify an object with a spec field. False or null
    means to unpin from IPFS, but it's unsupported right now.

    """


class Storage(BaseModel):
    ipfs: OptionalNullable[Ipfs] = UNSET
    r"""Set to true to make default export to IPFS. To customize the
    pinned files, specify an object with a spec field. False or null
    means to unpin from IPFS, but it's unsupported right now.

    """

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["ipfs"]
        nullable_fields = ["ipfs"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
