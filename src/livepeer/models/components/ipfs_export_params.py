"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from livepeer.types import BaseModel
import pydantic
from typing import Any, Optional, TypedDict, Union
from typing_extensions import Annotated, NotRequired


class Pinata2TypedDict(TypedDict):
    api_key: str
    r"""Will be added to the pinata_api_key header."""


class Pinata2(BaseModel):
    api_key: Annotated[str, pydantic.Field(alias="apiKey")]
    r"""Will be added to the pinata_api_key header."""


class Pinata1TypedDict(TypedDict):
    pass


class Pinata1(BaseModel):
    pass


PinataTypedDict = Union[Pinata1TypedDict, Pinata2TypedDict]
r"""Custom credentials for the Pi単ata service. Must have either
a JWT or an API key and an API secret.

"""


Pinata = Union[Pinata1, Pinata2]
r"""Custom credentials for the Pi単ata service. Must have either
a JWT or an API key and an API secret.

"""


class IpfsExportParamsTypedDict(TypedDict):
    dollar_ref: NotRequired[Any]
    pinata: NotRequired[PinataTypedDict]
    r"""Custom credentials for the Pi単ata service. Must have either
    a JWT or an API key and an API secret.

    """


class IpfsExportParams(BaseModel):
    dollar_ref: Annotated[Optional[Any], pydantic.Field(alias="$ref")] = None

    pinata: Optional[Pinata] = None
    r"""Custom credentials for the Pi単ata service. Must have either
    a JWT or an API key and an API secret.

    """
