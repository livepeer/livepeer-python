"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from livepeer.types import BaseModel
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class RealtimeViewershipMetricTypedDict(TypedDict):
    r"""An individual metric about realtime viewership of a stream/asset."""

    view_count: int
    r"""The number of views for the stream/asset."""
    error_rate: float
    r"""The error rate for the stream/asset."""
    playback_id: NotRequired[str]
    r"""The playback ID associated with the metric."""
    device: NotRequired[str]
    r"""The device used by the viewer."""
    browser: NotRequired[str]
    r"""The browser used by the viewer."""
    country: NotRequired[str]
    r"""The country where the viewer is located."""


class RealtimeViewershipMetric(BaseModel):
    r"""An individual metric about realtime viewership of a stream/asset."""

    view_count: Annotated[int, pydantic.Field(alias="viewCount")]
    r"""The number of views for the stream/asset."""

    error_rate: Annotated[float, pydantic.Field(alias="errorRate")]
    r"""The error rate for the stream/asset."""

    playback_id: Annotated[Optional[str], pydantic.Field(alias="playbackId")] = None
    r"""The playback ID associated with the metric."""

    device: Optional[str] = None
    r"""The device used by the viewer."""

    browser: Optional[str] = None
    r"""The browser used by the viewer."""

    country: Optional[str] = None
    r"""The country where the viewer is located."""
