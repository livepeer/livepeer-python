"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .storage_status import StorageStatus, StorageStatusTypedDict
from enum import Enum
from livepeer.types import BaseModel
import pydantic
from typing import Any, List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class PrimaryType(str, Enum):
    r"""Video Metadata EIP-712 primaryType"""

    VIDEO_ATTESTATION = "VideoAttestation"


class Name(str, Enum):
    VERIFIABLE_VIDEO = "Verifiable Video"


class Version(str, Enum):
    ONE = "1"


class DomainTypedDict(TypedDict):
    r"""Video Metadata EIP-712 domain"""

    name: Name
    version: Version


class Domain(BaseModel):
    r"""Video Metadata EIP-712 domain"""

    name: Name

    version: Version


class AttestationsTypedDict(TypedDict):
    role: str
    address: str


class Attestations(BaseModel):
    role: str

    address: str


class MessageTypedDict(TypedDict):
    r"""Video Metadata EIP-712 message content"""

    video: str
    attestations: List[AttestationsTypedDict]
    signer: str
    timestamp: float


class Message(BaseModel):
    r"""Video Metadata EIP-712 message content"""

    video: str

    attestations: List[Attestations]

    signer: str

    timestamp: float


class SignatureType(str, Enum):
    EIP712 = "eip712"
    FLOW = "flow"


class AttestationIpfsTypedDict(TypedDict):
    dollar_ref: NotRequired[Any]
    updated_at: NotRequired[float]
    r"""Timestamp (in milliseconds) at which IPFS export task was updated

    """


class AttestationIpfs(BaseModel):
    dollar_ref: Annotated[Optional[Any], pydantic.Field(alias="$ref")] = None

    updated_at: Annotated[Optional[float], pydantic.Field(alias="updatedAt")] = None
    r"""Timestamp (in milliseconds) at which IPFS export task was updated

    """


class AttestationStorageTypedDict(TypedDict):
    ipfs: NotRequired[AttestationIpfsTypedDict]
    status: NotRequired[StorageStatusTypedDict]


class AttestationStorage(BaseModel):
    ipfs: Optional[AttestationIpfs] = None

    status: Optional[StorageStatus] = None


class AttestationTypedDict(TypedDict):
    primary_type: PrimaryType
    r"""Video Metadata EIP-712 primaryType"""
    domain: DomainTypedDict
    r"""Video Metadata EIP-712 domain"""
    message: MessageTypedDict
    r"""Video Metadata EIP-712 message content"""
    signature: str
    r"""Video Metadata EIP-712 message signature"""
    id: NotRequired[str]
    created_at: NotRequired[float]
    r"""Timestamp (in milliseconds) at which the object was created"""
    signature_type: NotRequired[SignatureType]
    storage: NotRequired[AttestationStorageTypedDict]


class Attestation(BaseModel):
    primary_type: Annotated[PrimaryType, pydantic.Field(alias="primaryType")]
    r"""Video Metadata EIP-712 primaryType"""

    domain: Domain
    r"""Video Metadata EIP-712 domain"""

    message: Message
    r"""Video Metadata EIP-712 message content"""

    signature: str
    r"""Video Metadata EIP-712 message signature"""

    id: Optional[str] = None

    created_at: Annotated[Optional[float], pydantic.Field(alias="createdAt")] = None
    r"""Timestamp (in milliseconds) at which the object was created"""

    signature_type: Annotated[
        Optional[SignatureType], pydantic.Field(alias="signatureType")
    ] = None

    storage: Optional[AttestationStorage] = None
