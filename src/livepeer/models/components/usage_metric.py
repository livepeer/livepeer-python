"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from livepeer import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsageMetric:
    r"""An individual metric about usage of a user."""
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserID'), 'exclude': lambda f: f is None }})
    r"""The user ID associated with the metric"""
    creator_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatorID'), 'exclude': lambda f: f is None }})
    r"""The creator ID associated with the metric"""
    delivery_usage_mins: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryUsageMins'), 'exclude': lambda f: f is None }})
    r"""Total minutes of delivery usage."""
    total_usage_mins: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalUsageMins'), 'exclude': lambda f: f is None }})
    r"""Total transcoded minutes."""
    storage_usage_mins: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageUsageMins'), 'exclude': lambda f: f is None }})
    r"""Total minutes of storage usage."""
    

