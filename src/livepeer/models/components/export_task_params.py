"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .ipfs_export_params import IpfsExportParams, IpfsExportParamsTypedDict
from livepeer.types import BaseModel
from typing import Dict, Optional, TypedDict, Union
from typing_extensions import NotRequired


class ExportTaskParams2TypedDict(TypedDict):
    ipfs: IpfsExportParamsTypedDict


class ExportTaskParams2(BaseModel):
    ipfs: IpfsExportParams


class CustomTypedDict(TypedDict):
    r"""custom URL parameters for the export task"""

    url: str
    r"""URL where to export the asset"""
    method: NotRequired[str]
    r"""Method to use on the export request"""
    headers: NotRequired[Dict[str, str]]
    r"""Headers to add to the export request"""


class Custom(BaseModel):
    r"""custom URL parameters for the export task"""

    url: str
    r"""URL where to export the asset"""

    method: Optional[str] = "PUT"
    r"""Method to use on the export request"""

    headers: Optional[Dict[str, str]] = None
    r"""Headers to add to the export request"""


class ExportTaskParams1TypedDict(TypedDict):
    custom: CustomTypedDict
    r"""custom URL parameters for the export task"""


class ExportTaskParams1(BaseModel):
    custom: Custom
    r"""custom URL parameters for the export task"""


ExportTaskParamsTypedDict = Union[
    ExportTaskParams1TypedDict, ExportTaskParams2TypedDict
]
r"""Parameters for the export task"""


ExportTaskParams = Union[ExportTaskParams1, ExportTaskParams2]
r"""Parameters for the export task"""
