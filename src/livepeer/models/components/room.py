"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from livepeer.types import BaseModel
import pydantic
from typing import Dict, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class ParticipantsTypedDict(TypedDict):
    identity: NotRequired[str]
    r"""participant ID"""
    name: NotRequired[str]
    r"""user defined participant name"""
    joined_at: NotRequired[int]
    r"""the time the participant joined"""
    left_at: NotRequired[int]
    r"""the time the participant left"""


class Participants(BaseModel):
    identity: Optional[str] = None
    r"""participant ID"""

    name: Optional[str] = None
    r"""user defined participant name"""

    joined_at: Annotated[Optional[int], pydantic.Field(alias="joinedAt")] = None
    r"""the time the participant joined"""

    left_at: Annotated[Optional[int], pydantic.Field(alias="leftAt")] = None
    r"""the time the participant left"""


class RoomTypedDict(TypedDict):
    id: str
    r"""room ID"""
    participants: Dict[str, ParticipantsTypedDict]
    created_at: NotRequired[float]
    r"""Timestamp (in milliseconds) at which the room was created"""
    updated_at: NotRequired[float]
    r"""Timestamp (in milliseconds) at which room was updated"""
    egress_id: NotRequired[str]
    r"""internal ID for egress output"""


class Room(BaseModel):
    id: str
    r"""room ID"""

    participants: Dict[str, Participants]

    created_at: Annotated[Optional[float], pydantic.Field(alias="createdAt")] = None
    r"""Timestamp (in milliseconds) at which the room was created"""

    updated_at: Annotated[Optional[float], pydantic.Field(alias="updatedAt")] = None
    r"""Timestamp (in milliseconds) at which room was updated"""

    egress_id: Annotated[Optional[str], pydantic.Field(alias="egressId")] = None
    r"""internal ID for egress output"""
